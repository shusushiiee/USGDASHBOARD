// src/api.js
import axios from 'axios';

// Base URL of your API
const API_URL = 'http://localhost:5000/api'; // Replace with your actual API URL

// Fetch services from the API
export const fetchServices = async () => {
    try {
        const response = await axios.get(`${API_URL}/services`);
        return response.data; // Assuming the data is returned in the response body
    } catch (error) {
        console.error("Error fetching services:", error);
        throw error;
    }
};

// Toggle service activation status
export const toggleService = async (serviceName) => {
    try {
        const response = await axios.post(`${API_URL}/services/toggle`, { name: serviceName });
        return response.data; // Assuming the updated service data is returned
    } catch (error) {
        console.error("Error toggling service:", error);
        throw error;
    }
};





// src/pages/ServiceManagement.js
import React, { useEffect, useContext } from 'react';
import { ServiceContext } from '../context/ServiceContext'; // Import your context
import { fetchServices, toggleService as toggleServiceAPI } from '../api'; // Import your API functions

const ServiceManagement = () => {
    const { activeServices, toggleService } = useContext(ServiceContext);
    const [services, setServices] = React.useState([]);

    // Fetch services on component mount
    useEffect(() => {
        const loadServices = async () => {
            try {
                const servicesData = await fetchServices();
                const initialActiveServices = servicesData.reduce((acc, service) => {
                    acc[service.name] = service.isActive; // Assuming the API returns an `isActive` field
                    return acc;
                }, {});
                setServices(servicesData);
                toggleService(initialActiveServices); // Initialize context state
            } catch (error) {
                console.error("Failed to load services:", error);
            }
        };

        loadServices();
    }, [toggleService]);

    // Function to toggle service and log it
    const handleServiceToggle = async (serviceName) => {
        try {
            const updatedService = await toggleServiceAPI(serviceName); // Call API to toggle
            toggleService(updatedService.name); // Update context state
        } catch (error) {
            console.error("Error toggling service:", error);
        }
    };

    return (
        <div style={{ padding: '20px' }}>
            <h3 className='pb-3'>Core Banking Services</h3>
            <div style={{ display: 'flex', flexWrap: 'wrap', gap: '15px' }}>
                {services.map(({ name, icon }) => (
                    <div
                        key={name}
                        onClick={() => handleServiceToggle(name)}
                        style={{
                            border: '1px solid #ccc',
                            borderRadius: '8px',
                            backgroundColor: activeServices[name] ? '#4caf50' : '#d6dde5',
                            color: activeServices[name] ? '#fff' : '#000',
                            cursor: 'pointer',
                            transition: 'background-color 0.3s',
                            width: '220px',
                            textAlign: 'center',
                            fontSize: '16px',
                            height: '100px',
                            display: 'flex',
                            flexDirection: 'column',
                            alignItems: 'center',
                            justifyContent: 'center',
                            marginLeft: 'auto',
                            marginRight: 'auto',
                            marginBottom: '10px',
                        }}
                    >
                        <div style={{ fontSize: '24px' }}>{icon}</div>
                        {name}
                    </div>
                ))}
            </div>
        </div>
    );
};

export default ServiceManagement;
